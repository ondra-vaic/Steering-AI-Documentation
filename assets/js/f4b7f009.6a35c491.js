"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4331],{3500:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var t=i(4848),a=i(8453);i(6025);const r={sidebar_position:5},o="Unmanaged Animation Curve",s={id:"documentation-defaults/utilities/unmanaged-animation-curve",title:"Unmanaged Animation Curve",description:"Unity provides animation curves with the AnimationCurve class. Unfortunately as of now this is a class and so cannot be used inside burst compiled jobs. AnimationCurveUnmanaged can be used to bypass this restriction. The following snippet shows using AnimationCurveUnmanaged inside a implementation of a simple behavior.",source:"@site/docs/5_documentation-defaults/4_utilities/5_unmanaged-animation-curve.mdx",sourceDirName:"5_documentation-defaults/4_utilities",slug:"/documentation-defaults/utilities/unmanaged-animation-curve",permalink:"/Steering-AI-Documentation/docs/documentation-defaults/utilities/unmanaged-animation-curve",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Spawner",permalink:"/Steering-AI-Documentation/docs/documentation-defaults/utilities/spawner"},next:{title:"Merge Velocities",permalink:"/Steering-AI-Documentation/docs/documentation-defaults/Merger"}},u={},l=[];function c(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"unmanaged-animation-curve",children:"Unmanaged Animation Curve"})}),"\n",(0,t.jsxs)(n.p,{children:["Unity provides animation curves with the ",(0,t.jsx)(n.code,{children:"AnimationCurve"})," class. Unfortunately as of now this is a class and so cannot be used inside burst compiled jobs. ",(0,t.jsx)(n.code,{children:"AnimationCurveUnmanaged"})," can be used to bypass this restriction. The following snippet shows using ",(0,t.jsx)(n.code,{children:"AnimationCurveUnmanaged"})," inside a implementation of a ",(0,t.jsx)(n.a,{href:"/docs/documentation-core/behaviors/simple-behaviors/overview",children:"simple behavior"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:'title="Sample usage of AnimationCurveUnmanaged"',children:"[BurstCompile]\r\nstruct SampleJob : ISimpleBehaviorJob<SampleComponent, VelocityResult>\r\n{\r\n    // highlight-next-line\r\n    public AnimationCurveUnmanaged Curve;\r\n        \r\n    public VelocityResult Execute(EntityInformation<SampleComponent> entity)\r\n    {\r\n        // highlight-next-line\r\n        float x = Curve.Sample(0.1f);\r\n        ...\r\n        return result;\r\n    }\r\n}\r\n\r\npublic class SampleJobWrapper : ISimpleBehaviorJobWrapper\r\n{\r\n    // highlight-next-line\r\n    [SerializeField] private AnimationCurve animationCurve;\r\n        \r\n    public JobHandle Schedule(...)\r\n    {\r\n        // highlight-next-line\r\n        AnimationCurveUnmanaged curve = new AnimationCurveUnmanaged(animationCurve, 100);\r\n            \r\n        var outDependency = new SampleJob\r\n        {\r\n            // highlight-next-line\r\n            Curve = curve\r\n        }.Schedule<SampleJob, SampleComponent, VelocityResult>(...);\r\n            \r\n        // highlight-next-line\r\n        curve.Dispose(outDependency);\r\n        return outDependency;\r\n    }\r\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>s});var t=i(6540);const a={},r=t.createContext(a);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);