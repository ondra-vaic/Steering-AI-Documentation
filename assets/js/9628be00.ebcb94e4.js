"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9183],{249:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var r=t(4848),n=t(8453),i=t(6025);const o={sidebar_position:2},a="BaseSteeringSystem",c={id:"documentation-core/base-system/BaseSteeringSystem",title:"BaseSteeringSystem",description:"BaseSteeringSystem is a base class inheriting from SystemBase, which can be inherited to create a steering system. It is configurable by SteeringSystemAsset, which can be edited through the editor. The asset contains definition of which jobs, using which queries, to run. The base class is responsible for scheduling these jobs and queries and passing data between them.",source:"@site/docs/4_documentation-core/1_base-system/2_BaseSteeringSystem.mdx",sourceDirName:"4_documentation-core/1_base-system",slug:"/documentation-core/base-system/BaseSteeringSystem",permalink:"/Steering-AI-Documentation/docs/documentation-core/base-system/BaseSteeringSystem",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/Steering-AI-Documentation/docs/documentation-core/base-system/overview"},next:{title:"SteeringSystemAsset",permalink:"/Steering-AI-Documentation/docs/documentation-core/base-system/SteeringSystemAsset"}},d={},h=[{value:"Usage",id:"usage",level:2},{value:"What It Does",id:"what-it-does",level:2}];function l(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"basesteeringsystem",children:"BaseSteeringSystem"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/docs/documentation-core/base-system/BaseSteeringSystem",children:(0,r.jsx)(s.code,{children:"BaseSteeringSystem"})})," is a base class inheriting from ",(0,r.jsx)(s.a,{href:"https://docs.unity3d.com/Packages/com.unity.entities@1.3/manual/systems-systembase.html",children:(0,r.jsx)(s.code,{children:"SystemBase"})}),", which can be inherited to create a steering system. It is configurable by ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/base-system/SteeringSystemAsset",children:(0,r.jsx)(s.code,{children:"SteeringSystemAsset"})}),", which can be edited through the ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/editor",children:"editor"}),". The asset contains definition of which jobs, using which queries, to run. The base class is responsible for scheduling these ",(0,r.jsx)(s.a,{href:"https://docs.unity3d.com/Manual/job-system.html",children:"jobs"})," and ",(0,r.jsx)(s.a,{href:"/docs/category/queries",children:"queries"})," and passing data between them."]}),"\n",(0,r.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(s.p,{children:["To create a new steering system, inherit from ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/base-system/BaseSteeringSystem",children:(0,r.jsx)(s.code,{children:"BaseSteeringSystem"})})," and override the ",(0,r.jsx)(s.code,{children:"getAssetReferenceName()"})," method to return the addressable path to the ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/base-system/SteeringSystemAsset",children:(0,r.jsx)(s.code,{children:"SteeringSystemAsset"})})," to use."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-csharp",metastring:'title="SampleSteeringSystem.cs"',children:'using SteeringAI.Core;\r\nusing Unity.Entities;\r\n\r\n[UpdateInGroup(typeof(SteeringSystemsGroup))]\r\npublic partial class SampleSteeringSystem : BaseSteeringSystem\r\n{\r\n    protected override string getAssetReferenceName()\r\n    {\r\n        return "Path/To/SteeringSystemAsset.asset";\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"what-it-does",children:"What It Does"}),"\n",(0,r.jsxs)(s.p,{children:["The image below illustrates what ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/base-system/BaseSteeringSystem",children:(0,r.jsx)(s.code,{children:"BaseSteeringSystem"})})," does internally."]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["First entities with the same ",(0,r.jsx)(s.strong,{children:"Main Tag"})," are queried with an ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/queries/entity-queries",children:(0,r.jsx)(s.strong,{children:"Entity Query"})}),". Information from these entities is extracted into ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/base-system/BaseBehaviorParams",children:(0,r.jsx)(s.code,{children:"BaseBehaviorParams"})}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["This is passed to all ",(0,r.jsxs)(s.strong,{children:[(0,r.jsx)(s.a,{href:"/docs/documentation-core/behaviors/simple-behaviors/overview",children:"Simple-"}),", ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/behaviors/neighbor-behaviors/intro",children:"Neighbor-"}),", ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/behaviors/ray-behaviors/overview",children:"Raycast Behaviors"})]}),". All ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/behaviors/simple-behaviors/overview",children:(0,r.jsx)(s.strong,{children:"Simple Behaviors"})})," are simply ran in parallel and their results passed into the ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/merger",children:(0,r.jsx)(s.strong,{children:"Merger"})}),". For ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/behaviors/neighbor-behaviors/intro",children:(0,r.jsx)(s.strong,{children:"Neighbor Behaviors"})})," and ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/behaviors/ray-behaviors/overview",children:(0,r.jsx)(s.strong,{children:"Raycast Behaviors"})})," there are additional ",(0,r.jsx)(s.a,{href:"/docs/category/queries",children:(0,r.jsx)(s.strong,{children:"Queries"})})," done first. These behaviors are grouped by the additional queries."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["After the ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/merger",children:(0,r.jsx)(s.strong,{children:"Merger"})})," receives results from all behaviors, it merges them into a single result for each entity, which can later be used by any ",(0,r.jsx)(s.a,{href:"/docs/category/movement",children:(0,r.jsx)(s.strong,{children:"Move System"})}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["In the ",(0,r.jsx)(s.a,{href:"/docs/category/documentation-defaults",children:"defaults library"}),", all ",(0,r.jsx)(s.a,{href:"/docs/category/behaviors-1",children:"behaviors"})," return ",(0,r.jsx)(s.a,{href:"/docs/documentation-defaults/behaviors/VelocityResult",children:(0,r.jsx)(s.code,{children:"VelocityResult"})})," and a merger turns it into a ",(0,r.jsx)(s.a,{href:"/docs/documentation-defaults/Merger#desiredvelocitycomponent",children:(0,r.jsx)(s.code,{children:"DesiredVelocityComponent"})}),". It is however possible to create your own workflows. This is defined through the implementation of ",(0,r.jsx)(s.a,{href:"/docs/documentation-core/merger",children:"merger"}),"."]})}),"\n",(0,r.jsx)("p",{align:"left",children:(0,r.jsx)("img",{src:(0,i.Ay)("/img/Implementation14.svg"),alt:"Steering System Diagram",width:"650px",class:"invert-for-dark"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsxs)(s.em,{children:["Diagram illustrating how the ",(0,r.jsx)(s.a,{href:"https://docs.unity3d.com/Manual/job-system.html",children:"jobs"})," and ",(0,r.jsx)(s.a,{href:"/docs/category/queries",children:"queries"})," are scheduled, synchronized and how data is passed between them."]})})]})}function m(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var r=t(6540);const n={},i=r.createContext(n);function o(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);