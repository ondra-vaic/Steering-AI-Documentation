"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6799],{1633:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=s(4848),o=s(8453);s(6025);const i={sidebar_position:1},t="Debug Rays",a={id:"documentation-defaults/behaviors/ray-behaviors/debug-rays",title:"Debug Rays",description:"Draw an arrow for each cast ray, green for rays that miss, red for rays that hit. Can be used to debug ray queries.",source:"@site/docs/5_documentation-defaults/1_behaviors/3_ray-behaviors/1_debug-rays.mdx",sourceDirName:"5_documentation-defaults/1_behaviors/3_ray-behaviors",slug:"/documentation-defaults/behaviors/ray-behaviors/debug-rays",permalink:"/docs/documentation-defaults/behaviors/ray-behaviors/debug-rays",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/documentation-defaults/behaviors/ray-behaviors/overview"},next:{title:"Avoid Ground",permalink:"/docs/documentation-defaults/behaviors/ray-behaviors/avoid-ground"}},d={},c=[{value:"DebugRaysJob",id:"debugraysjob",level:2},{value:"DebugRaysComponent",id:"debugrayscomponent",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"debug-rays",children:"Debug Rays"})}),"\n",(0,r.jsxs)(n.p,{children:["Draw an arrow for each cast ray, green for rays that miss, red for rays that hit. Can be used to debug ",(0,r.jsx)(n.a,{href:"/docs/documentation-core/queries/ray_queries/overview",children:"ray queries"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"debugraysjob",children:"DebugRaysJob"}),"\n",(0,r.jsx)(n.p,{children:"This behavior outputs the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DesiredDirection"})," - ",(0,r.jsx)(n.code,{children:"float.zero"})," ",(0,r.jsx)(n.em,{children:"(constant)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DirectionDesire"})," - ",(0,r.jsx)(n.code,{children:"0"})," ",(0,r.jsx)(n.em,{children:"(constant)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DesiredSpeed"})," - ",(0,r.jsx)(n.code,{children:"0"})," ",(0,r.jsx)(n.em,{children:"(constant)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SpeedDesire"})," - ",(0,r.jsx)(n.code,{children:"0"})," ",(0,r.jsx)(n.em,{children:"(constant)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Priority"})," -  ",(0,r.jsx)(n.code,{children:"0"})," ",(0,r.jsx)(n.em,{children:"(constant)"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"debugrayscomponent",children:"DebugRaysComponent"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"DebugRaysComponent"})," contains only ",(0,r.jsx)(n.code,{children:"BaseData"}),". The main interesting properties to adjust on the component are:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"BaseData"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"IsActive"})," - Mark it to activate the behavior."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(6540);const o={},i=r.createContext(o);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);