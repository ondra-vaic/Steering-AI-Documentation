"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2195],{4618:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var i=o(4848),n=o(8453);o(6025);const s={sidebar_position:3},l="Collision Resolution",r={id:"documentation-defaults/movement/collision-resolution",title:"Collision Resolution",description:"Normally in Unity CharacterController handles both movement and collision resolution. Here the collision resolution is split into a separate system - CollideAndSlideSystem which implements a collide and slide algorithm. This allows the collision resolution to be used with any movement system. For now the algorithm only supports a sphere shape to detect collisions. The system takes the entities' RadiusComponent as the sphere's radius. Collisions are detected against any Unity Collider in the scene. A collider does not need to be present on the entities themselves.",source:"@site/docs/5_documentation-defaults/3_movement/3_collision-resolution.mdx",sourceDirName:"5_documentation-defaults/3_movement",slug:"/documentation-defaults/movement/collision-resolution",permalink:"/docs/documentation-defaults/movement/collision-resolution",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Movement 2.5D",permalink:"/docs/documentation-defaults/movement/2_25D-movement"},next:{title:"Utilities",permalink:"/docs/category/utilities"}},d={},c=[];function a(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"collision-resolution",children:"Collision Resolution"})}),"\n",(0,i.jsxs)(t.p,{children:["Normally in Unity ",(0,i.jsx)(t.a,{href:"https://docs.unity3d.com/ScriptReference/CharacterController.html",children:(0,i.jsx)(t.code,{children:"CharacterController"})})," handles both movement and collision resolution. Here the collision resolution is split into a separate system - ",(0,i.jsx)(t.code,{children:"CollideAndSlideSystem"})," which implements a ",(0,i.jsx)(t.a,{href:"https://www.youtube.com/watch?v=YR6Q7dUz2uk",children:"collide and slide algorithm"}),". This allows the collision resolution to be used with any movement system. For now the algorithm only supports a sphere shape to detect collisions. The system takes the entities' ",(0,i.jsx)(t.a,{href:"/docs/documentation-core/base-system/steering-entity",children:(0,i.jsx)(t.code,{children:"RadiusComponent"})})," as the sphere's radius. Collisions are detected against any Unity ",(0,i.jsx)(t.a,{href:"https://docs.unity3d.com/ScriptReference/Collider.html",children:(0,i.jsx)(t.code,{children:"Collider"})})," in the scene. A collider does not need to be present on the entities themselves."]}),"\n",(0,i.jsxs)(t.p,{children:["To use it, add the ",(0,i.jsx)(t.code,{children:"KinematicBodyAuthoring"})," which adds ",(0,i.jsx)(t.code,{children:"CollideAndSlideComponent"}),". The ",(0,i.jsx)(t.code,{children:"KinematicBodyAuthoring"})," has the following properties:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"IsActive"})," - Should collisions be resolved."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"SkinWidth"})," - Skin width, small number to avoid floating point inaccuracies."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"LayerMask"})," - The ",(0,i.jsx)(t.a,{href:"https://docs.unity3d.com/ScriptReference/LayerMask.html",children:(0,i.jsx)(t.code,{children:"LayerMask"})})," to filter ",(0,i.jsx)(t.a,{href:"https://docs.unity3d.com/ScriptReference/Collider.html",children:(0,i.jsx)(t.code,{children:"Collider"})}),"s."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Debug"})," - Draws spheres for debugging different states of the collide and slide algorithm."]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["The entities do not need to have a ",(0,i.jsx)(t.a,{href:"https://docs.unity3d.com/ScriptReference/Collider.html",children:(0,i.jsx)(t.code,{children:"Collider"})})," to detect and resolve collisions, they only need the ",(0,i.jsx)(t.code,{children:"KinematicBodyAuthoring"}),"."]})}),"\n",(0,i.jsxs)(t.admonition,{type:"note",children:[(0,i.jsx)(t.mdxAdmonitionTitle,{}),(0,i.jsxs)(t.p,{children:["The algorithm is based on ",(0,i.jsx)(t.a,{href:"https://arxiv.org/pdf/1211.0059",children:"paper"})," about numerically stable collide and slide algorithm by Jeff Linahan."]})]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>l,x:()=>r});var i=o(6540);const n={},s=i.createContext(n);function l(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);