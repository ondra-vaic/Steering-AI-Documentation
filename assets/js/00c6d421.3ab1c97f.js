"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8499],{1566:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/Steering-AI-Documentation/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/Steering-AI-Documentation/docs/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Minimal Setup","href":"/Steering-AI-Documentation/docs/getting-started/minimal-set-up","docId":"getting-started/minimal-set-up","unlisted":false},{"type":"link","label":"Concepts","href":"/Steering-AI-Documentation/docs/getting-started/concepts","docId":"getting-started/concepts","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/getting-started"},{"type":"category","label":"Samples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1. Minimal Setup","href":"/Steering-AI-Documentation/docs/samples/minimal-set-up","docId":"samples/minimal-set-up","unlisted":false},{"type":"link","label":"2. 2D Movement","href":"/Steering-AI-Documentation/docs/samples/2_2d-movement","docId":"samples/2_2d-movement","unlisted":false},{"type":"link","label":"3. 3D Movement","href":"/Steering-AI-Documentation/docs/samples/3_3d-movement","docId":"samples/3_3d-movement","unlisted":false},{"type":"link","label":"4. Collisions","href":"/Steering-AI-Documentation/docs/samples/collisions","docId":"samples/collisions","unlisted":false},{"type":"link","label":"5. 2.5D Movement","href":"/Steering-AI-Documentation/docs/samples/5_2.5d-movement","docId":"samples/5_2.5d-movement","unlisted":false},{"type":"link","label":"6. Flocking","href":"/Steering-AI-Documentation/docs/samples/flocking","docId":"samples/flocking","unlisted":false},{"type":"link","label":"7. Collision Avoidance","href":"/Steering-AI-Documentation/docs/samples/collision-avoidance","docId":"samples/collision-avoidance","unlisted":false},{"type":"link","label":"8. Flocking with Predator","href":"/Steering-AI-Documentation/docs/samples/flocking-with-predator","docId":"samples/flocking-with-predator","unlisted":false},{"type":"link","label":"9. Full Example","href":"/Steering-AI-Documentation/docs/samples/full-example-scene","docId":"samples/full-example-scene","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/samples"},{"type":"category","label":"Documentation Core","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Base System","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-core/base-system/overview","docId":"documentation-core/base-system/overview","unlisted":false},{"type":"link","label":"BaseSteeringSystem","href":"/Steering-AI-Documentation/docs/documentation-core/base-system/BaseSteeringSystem","docId":"documentation-core/base-system/BaseSteeringSystem","unlisted":false},{"type":"link","label":"SteeringSystemAsset","href":"/Steering-AI-Documentation/docs/documentation-core/base-system/SteeringSystemAsset","docId":"documentation-core/base-system/SteeringSystemAsset","unlisted":false},{"type":"link","label":"SteeringEntityAuthoring","href":"/Steering-AI-Documentation/docs/documentation-core/base-system/steering-entity","docId":"documentation-core/base-system/steering-entity","unlisted":false},{"type":"link","label":"BaseBehaviorParams","href":"/Steering-AI-Documentation/docs/documentation-core/base-system/BaseBehaviorParams","docId":"documentation-core/base-system/BaseBehaviorParams","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/base-system"},{"type":"category","label":"Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-core/components/intro","docId":"documentation-core/components/intro","unlisted":false},{"type":"link","label":"Component Creation","href":"/Steering-AI-Documentation/docs/documentation-core/components/create","docId":"documentation-core/components/create","unlisted":false},{"type":"link","label":"ISimpleBaseBehavior","href":"/Steering-AI-Documentation/docs/documentation-core/components/ISimpleBaseBehavior","docId":"documentation-core/components/ISimpleBaseBehavior","unlisted":false},{"type":"link","label":"INeighborBaseBehavior","href":"/Steering-AI-Documentation/docs/documentation-core/components/INeighborBaseBehavior","docId":"documentation-core/components/INeighborBaseBehavior","unlisted":false},{"type":"link","label":"IRayBaseBehavior","href":"/Steering-AI-Documentation/docs/documentation-core/components/IRayBaseBehavior","docId":"documentation-core/components/IRayBaseBehavior","unlisted":false},{"type":"link","label":"Tags","href":"/Steering-AI-Documentation/docs/documentation-core/components/Tags","docId":"documentation-core/components/Tags","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/components"},{"type":"category","label":"Queries","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Neighbor Queries","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-core/queries/neighbor_queries/overview","docId":"documentation-core/queries/neighbor_queries/overview","unlisted":false},{"type":"link","label":"INeighborQueryJobWrapper","href":"/Steering-AI-Documentation/docs/documentation-core/queries/neighbor_queries/neighbor-queries","docId":"documentation-core/queries/neighbor_queries/neighbor-queries","unlisted":false},{"type":"link","label":"NeighborQueryParams","href":"/Steering-AI-Documentation/docs/documentation-core/queries/neighbor_queries/neighbor-params","docId":"documentation-core/queries/neighbor_queries/neighbor-params","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/neighbor-queries"},{"type":"category","label":"Ray Queries","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-core/queries/ray_queries/overview","docId":"documentation-core/queries/ray_queries/overview","unlisted":false},{"type":"link","label":"ICreateRaysJobWrapper","href":"/Steering-AI-Documentation/docs/documentation-core/queries/ray_queries/ray-queries","docId":"documentation-core/queries/ray_queries/ray-queries","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/ray-queries"},{"type":"link","label":"Entity Queries","href":"/Steering-AI-Documentation/docs/documentation-core/queries/entity-queries","docId":"documentation-core/queries/entity-queries","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/queries"},{"type":"category","label":"Behaviors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-core/behaviors/overview","docId":"documentation-core/behaviors/overview","unlisted":false},{"type":"category","label":"Simple Behaviors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-core/behaviors/simple-behaviors/overview","docId":"documentation-core/behaviors/simple-behaviors/overview","unlisted":false},{"type":"link","label":"ISimpleBehaviorJobWrapper","href":"/Steering-AI-Documentation/docs/documentation-core/behaviors/simple-behaviors/ISimpleBehaviorJob","docId":"documentation-core/behaviors/simple-behaviors/ISimpleBehaviorJob","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/simple-behaviors"},{"type":"category","label":"Neighbor Behaviors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-core/behaviors/neighbor-behaviors/intro","docId":"documentation-core/behaviors/neighbor-behaviors/intro","unlisted":false},{"type":"link","label":"INeighborBehaviorJobWrapper","href":"/Steering-AI-Documentation/docs/documentation-core/behaviors/neighbor-behaviors/","docId":"documentation-core/behaviors/neighbor-behaviors/neighbor-behaviors","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/neighbor-behaviors"},{"type":"category","label":"Ray Behaviors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-core/behaviors/ray-behaviors/overview","docId":"documentation-core/behaviors/ray-behaviors/overview","unlisted":false},{"type":"link","label":"IRaycastBehaviorJobWrapper","href":"/Steering-AI-Documentation/docs/documentation-core/behaviors/ray-behaviors/ray-behaviors","docId":"documentation-core/behaviors/ray-behaviors/ray-behaviors","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/ray-behaviors"},{"type":"link","label":"IAccumulator","href":"/Steering-AI-Documentation/docs/documentation-core/behaviors/accumulators","docId":"documentation-core/behaviors/accumulators","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/behaviors"},{"type":"link","label":"Merger","href":"/Steering-AI-Documentation/docs/documentation-core/merger","docId":"documentation-core/merger","unlisted":false},{"type":"link","label":"Editor","href":"/Steering-AI-Documentation/docs/documentation-core/editor","docId":"documentation-core/editor","unlisted":false},{"type":"link","label":"Attributes","href":"/Steering-AI-Documentation/docs/documentation-core/attributes","docId":"documentation-core/attributes","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/documentation-core"},{"type":"category","label":"Documentation Defaults","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Behaviors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/intro","docId":"documentation-defaults/behaviors/intro","unlisted":false},{"type":"category","label":"Simple Behaviors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/simple-behaviors/overview","docId":"documentation-defaults/behaviors/simple-behaviors/overview","unlisted":false},{"type":"link","label":"Debug Simple","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/simple-behaviors/debug-simple","docId":"documentation-defaults/behaviors/simple-behaviors/debug-simple","unlisted":false},{"type":"link","label":"Align Up","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/simple-behaviors/align-up","docId":"documentation-defaults/behaviors/simple-behaviors/align-up","unlisted":false},{"type":"link","label":"Follow Path","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/simple-behaviors/follow-path","docId":"documentation-defaults/behaviors/simple-behaviors/follow-path","unlisted":false},{"type":"link","label":"Go Forward","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/simple-behaviors/go-foward","docId":"documentation-defaults/behaviors/simple-behaviors/go-foward","unlisted":false},{"type":"link","label":"Homing","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/simple-behaviors/homing","docId":"documentation-defaults/behaviors/simple-behaviors/homing","unlisted":false},{"type":"link","label":"Keep Height","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/simple-behaviors/KeepHeight","docId":"documentation-defaults/behaviors/simple-behaviors/KeepHeight","unlisted":false},{"type":"link","label":"Wandering","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/simple-behaviors/wandering","docId":"documentation-defaults/behaviors/simple-behaviors/wandering","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/simple-behaviors-1"},{"type":"category","label":"Neighbor Behaviors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/neighbor-behaviors/overview","docId":"documentation-defaults/behaviors/neighbor-behaviors/overview","unlisted":false},{"type":"link","label":"Debug Neighbors","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/neighbor-behaviors/debug-neigbhors","docId":"documentation-defaults/behaviors/neighbor-behaviors/debug-neigbhors","unlisted":false},{"type":"link","label":"Cohesion","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/neighbor-behaviors/cohesion","docId":"documentation-defaults/behaviors/neighbor-behaviors/cohesion","unlisted":false},{"type":"link","label":"Alignment","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/neighbor-behaviors/alignment","docId":"documentation-defaults/behaviors/neighbor-behaviors/alignment","unlisted":false},{"type":"link","label":"Separation","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/neighbor-behaviors/separation","docId":"documentation-defaults/behaviors/neighbor-behaviors/separation","unlisted":false},{"type":"link","label":"Flee","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/neighbor-behaviors/flee","docId":"documentation-defaults/behaviors/neighbor-behaviors/flee","unlisted":false},{"type":"link","label":"Seeking","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/neighbor-behaviors/seeking","docId":"documentation-defaults/behaviors/neighbor-behaviors/seeking","unlisted":false},{"type":"link","label":"MultiHoming","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/neighbor-behaviors/multi-homing","docId":"documentation-defaults/behaviors/neighbor-behaviors/multi-homing","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/neighbor-behaviors-1"},{"type":"category","label":"Ray Behaviors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/ray-behaviors/overview","docId":"documentation-defaults/behaviors/ray-behaviors/overview","unlisted":false},{"type":"link","label":"Debug Rays","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/ray-behaviors/debug-rays","docId":"documentation-defaults/behaviors/ray-behaviors/debug-rays","unlisted":false},{"type":"link","label":"Avoid Ground","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/ray-behaviors/avoid-ground","docId":"documentation-defaults/behaviors/ray-behaviors/avoid-ground","unlisted":false},{"type":"link","label":"Environment Avoidance","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/ray-behaviors/envrionment-avoidance","docId":"documentation-defaults/behaviors/ray-behaviors/envrionment-avoidance","unlisted":false},{"type":"link","label":"Avoid Vertical Walls","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/ray-behaviors/avoid-vertical-walls","docId":"documentation-defaults/behaviors/ray-behaviors/avoid-vertical-walls","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/ray-behaviors-1"},{"type":"link","label":"VelocityResult(s)","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/VelocityResult","docId":"documentation-defaults/behaviors/VelocityResult","unlisted":false},{"type":"link","label":"Accumulators","href":"/Steering-AI-Documentation/docs/documentation-defaults/behaviors/Accumulators","docId":"documentation-defaults/behaviors/Accumulators","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/behaviors-1"},{"type":"category","label":"Queries","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Neighbor Queries","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"KD Tree KNN","href":"/Steering-AI-Documentation/docs/documentation-defaults/queries/neighbor-queries/kd-tree-knn","docId":"documentation-defaults/queries/neighbor-queries/kd-tree-knn","unlisted":false},{"type":"link","label":"Spacial Hash KNN","href":"/Steering-AI-Documentation/docs/documentation-defaults/queries/neighbor-queries/spacial-hash-knn","docId":"documentation-defaults/queries/neighbor-queries/spacial-hash-knn","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/neighbor-queries-1"},{"type":"category","label":"Ray Queries","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Down Single Create Rays","href":"/Steering-AI-Documentation/docs/documentation-defaults/queries/ray-queries/down-single-create-rays","docId":"documentation-defaults/queries/ray-queries/down-single-create-rays","unlisted":false},{"type":"link","label":"Sweep 2D Query Create Rays","href":"/Steering-AI-Documentation/docs/documentation-defaults/queries/ray-queries/sweep-2D-create-rays","docId":"documentation-defaults/queries/ray-queries/sweep-2D-create-rays","unlisted":false},{"type":"link","label":"Cone Create Rays","href":"/Steering-AI-Documentation/docs/documentation-defaults/queries/ray-queries/cone-create-rays","docId":"documentation-defaults/queries/ray-queries/cone-create-rays","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/ray-queries-1"}],"href":"/Steering-AI-Documentation/docs/category/queries-1"},{"type":"category","label":"Movement","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Steering-AI-Documentation/docs/documentation-defaults/movement/overview","docId":"documentation-defaults/movement/overview","unlisted":false},{"type":"link","label":"Movement 2D","href":"/Steering-AI-Documentation/docs/documentation-defaults/movement/0_2D-movement","docId":"documentation-defaults/movement/0_2D-movement","unlisted":false},{"type":"link","label":"Movement 3D","href":"/Steering-AI-Documentation/docs/documentation-defaults/movement/1_3D-movement","docId":"documentation-defaults/movement/1_3D-movement","unlisted":false},{"type":"link","label":"Movement 2.5D","href":"/Steering-AI-Documentation/docs/documentation-defaults/movement/2_25D-movement","docId":"documentation-defaults/movement/2_25D-movement","unlisted":false},{"type":"link","label":"Collision Resolution","href":"/Steering-AI-Documentation/docs/documentation-defaults/movement/collision-resolution","docId":"documentation-defaults/movement/collision-resolution","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/movement"},{"type":"category","label":"Utilities","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Box Limiter","href":"/Steering-AI-Documentation/docs/documentation-defaults/utilities/box-limiter","docId":"documentation-defaults/utilities/box-limiter","unlisted":false},{"type":"link","label":"Paths","href":"/Steering-AI-Documentation/docs/documentation-defaults/utilities/path","docId":"documentation-defaults/utilities/path","unlisted":false},{"type":"link","label":"Spawner","href":"/Steering-AI-Documentation/docs/documentation-defaults/utilities/spawner","docId":"documentation-defaults/utilities/spawner","unlisted":false},{"type":"link","label":"Unmanaged Animation Curve","href":"/Steering-AI-Documentation/docs/documentation-defaults/utilities/unmanaged-animation-curve","docId":"documentation-defaults/utilities/unmanaged-animation-curve","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/utilities"},{"type":"link","label":"Merge Velocities","href":"/Steering-AI-Documentation/docs/documentation-defaults/Merger","docId":"documentation-defaults/Merger","unlisted":false}],"href":"/Steering-AI-Documentation/docs/category/documentation-defaults"}]},"docs":{"documentation-core/attributes":{"id":"documentation-core/attributes","title":"Attributes","description":"The framework uses several attributes to achieve type safe and user friendly experience.","sidebar":"tutorialSidebar"},"documentation-core/base-system/BaseBehaviorParams":{"id":"documentation-core/base-system/BaseBehaviorParams","title":"BaseBehaviorParams","description":"This struct is passed into all behaviors. It has information about the entities matched by the BaseSteeringSystem\'s main entity query. There are several arrays, each containing EntityCount elements (with the exception of ArchetypeChunks and ChunkBaseIndexArray). Each array element has some information about an entity at index i in the query. The BaseBehaviorParams struct contains these fields:","sidebar":"tutorialSidebar"},"documentation-core/base-system/BaseSteeringSystem":{"id":"documentation-core/base-system/BaseSteeringSystem","title":"BaseSteeringSystem","description":"BaseSteeringSystem is a base class inheriting from SystemBase, which can be inherited to create a steering system. It is configurable by SteeringSystemAsset, which can be edited through the editor. The asset contains definition of which jobs, using which queries, to run. The base class is responsible for scheduling these jobs and queries and passing data between them.","sidebar":"tutorialSidebar"},"documentation-core/base-system/overview":{"id":"documentation-core/base-system/overview","title":"Overview","description":"The core of the library is the BaseSteeringSystem. It loads a SteeringSystemAsset, which declaratively defines how entities should behave through queries and behaviors which are implemented as parallel jobs. The system then runs these jobs to determine where each entity wants to go. Each entity participating in the simulation must be initialized with SteeringEntityAuthoring.","sidebar":"tutorialSidebar"},"documentation-core/base-system/steering-entity":{"id":"documentation-core/base-system/steering-entity","title":"SteeringEntityAuthoring","description":"Any entity to be used with the framework should use SteeringEntityAuthoring. It adds components which are used internally by the framework. The components are:","sidebar":"tutorialSidebar"},"documentation-core/base-system/SteeringSystemAsset":{"id":"documentation-core/base-system/SteeringSystemAsset","title":"SteeringSystemAsset","description":"Instance of SteeringSystemAsset is loaded by the implementation of BaseSteeringSystem and defines it\'s behavior. The system is defined declaratively from queries and behaviors.","sidebar":"tutorialSidebar"},"documentation-core/behaviors/accumulators":{"id":"documentation-core/behaviors/accumulators","title":"IAccumulator","description":"Two custom jobs which can simplify creating behaviors use implementations of IAccumulator. Types implementing this interface must be included as generic parameters for implementations of INeighborBehaviorJob and IRaycastBehaviorJob.","sidebar":"tutorialSidebar"},"documentation-core/behaviors/neighbor-behaviors/intro":{"id":"documentation-core/behaviors/neighbor-behaviors/intro","title":"Overview","description":"The result of neighbor behaviors depends on an entity, and it\'s neighbors given by the Neighbor Query. Both the entity and the neighbors can have a component which parametrizes the behavior. For example, CohesionJobWrapper depends on CohesionAuthoring on the entity and SteeringEntityTagComponent on the neighbors. SteeringEntityTagComponent is used because this behavior does not need any special data and any entity in the simulation will have this tag. Any component which is required on the neighbor will show up in the All/(required) section of the neighbor group. This can be seen in the image below.","sidebar":"tutorialSidebar"},"documentation-core/behaviors/neighbor-behaviors/neighbor-behaviors":{"id":"documentation-core/behaviors/neighbor-behaviors/neighbor-behaviors","title":"INeighborBehaviorJobWrapper","description":"Neighbor behaviors are implementations of INeighborBehaviorJobWrapper. The BaseSteeringSystem schedules them after their corresponding neighbor query is done, passing in its results. There are three interfaces relevant in creating a neighbor behavior. The most important one is a custom job INeighborBehaviorJob, which significantly simplifies creating the behaviors.","sidebar":"tutorialSidebar"},"documentation-core/behaviors/overview":{"id":"documentation-core/behaviors/overview","title":"Overview","description":"There are three kinds of behaviors. Simple, Neighbor and Ray. The defaults library contains several implementations for each kind of behavior [1], [2], [3]. They can be added to a SteeringSystemAsset in the editor.","sidebar":"tutorialSidebar"},"documentation-core/behaviors/ray-behaviors/overview":{"id":"documentation-core/behaviors/ray-behaviors/overview","title":"Overview","description":"The result of ray behaviors depends on an entity and the ray casts created by the Ray Query. The entity can have a component which parametrizes this behavior. For example EnvironmentAvoidanceJobWrapper depends on EnvironmentAvoidanceComponent. The behaviors can be grouped together by the *Ray Query*.","sidebar":"tutorialSidebar"},"documentation-core/behaviors/ray-behaviors/ray-behaviors":{"id":"documentation-core/behaviors/ray-behaviors/ray-behaviors","title":"IRaycastBehaviorJobWrapper","description":"Ray behaviors are implementations of IRaycastBehaviorJobWrapper. The BaseSteeringSystem schedules them after their corresponding ray query is done, passing in its results. There are three interfaces relevant in creating a ray behavior. The most important one is a custom job IRaycastBehaviorJob which significantly simplifies creating the behaviors.","sidebar":"tutorialSidebar"},"documentation-core/behaviors/simple-behaviors/ISimpleBehaviorJob":{"id":"documentation-core/behaviors/simple-behaviors/ISimpleBehaviorJob","title":"ISimpleBehaviorJobWrapper","description":"Simple behaviors are implementations of ISimpleBehaviorJobWrapper. The BaseSteeringSystem schedules them after querying the entities with the main entity query. There are three interfaces relevant in creating a simple behavior. The most important one is a custom job ISimpleBehaviorJob which significantly simplifies creating the behaviors.","sidebar":"tutorialSidebar"},"documentation-core/behaviors/simple-behaviors/overview":{"id":"documentation-core/behaviors/simple-behaviors/overview","title":"Overview","description":"The result of simple behaviors depends only on a given entity and one of it\'s components. For example, GoForwardJobWrapper makes the entities go along their forward direction. The behavior can be parametrized with the GoForwardComponent. The image below shows an example of SteeringSystemAsset with GoForwardJobWrapper in the list of simple behaviors. The component this behavior depends on - GoForwardComponent is added to the list on the right.","sidebar":"tutorialSidebar"},"documentation-core/components/create":{"id":"documentation-core/components/create","title":"Component Creation","description":"A component in ECS is a little bit more work to set up than when using normal GameObjects. For example, the following is code needed for GoForwardComponent. There are three parts.","sidebar":"tutorialSidebar"},"documentation-core/components/INeighborBaseBehavior":{"id":"documentation-core/components/INeighborBaseBehavior","title":"INeighborBaseBehavior","description":"Components to be used with neighbor behaviors must implement INeighborBaseBehavior. It requires the component to have NeighborBehaviorData member with fields which are internally used by the framework. The fields are the same with ISimpleBaseBehavior, with the addition of:","sidebar":"tutorialSidebar"},"documentation-core/components/intro":{"id":"documentation-core/components/intro","title":"Overview","description":"Components are used to parametrize the behaviors per entity. A simple example is GoForwardAuthoring, which adds the GoForwardComponent to an entity. This component\'s data can then be used inside the Execute method of GoForwardJob, where it\'s passed in as EntityInformation.","sidebar":"tutorialSidebar"},"documentation-core/components/IRayBaseBehavior":{"id":"documentation-core/components/IRayBaseBehavior","title":"IRayBaseBehavior","description":"Components to be used with ray behaviors must implement IRayBaseBehavior. It requires the component to have RayBehaviorData member with fields which are internally used by the framework. The fields are the same with ISimpleBaseBehavior, with the addition of:","sidebar":"tutorialSidebar"},"documentation-core/components/ISimpleBaseBehavior":{"id":"documentation-core/components/ISimpleBaseBehavior","title":"ISimpleBaseBehavior","description":"Components to be used with simple behaviors must implement ISimpleBaseBehavior. It requires the component to have SimpleBehaviorData member with these fields which are internally used by the framework:","sidebar":"tutorialSidebar"},"documentation-core/components/Tags":{"id":"documentation-core/components/Tags","title":"Tags","description":"Tag components are components with no properties. Their main usage is to uniquely identify all entities which share the same tag - for example all birds in 9. Full Example have BirdTagComponent. Entity Queries can match entities with a given tag. The tags can also be used in Neighbor Queries to filter out potential neighbors.","sidebar":"tutorialSidebar"},"documentation-core/editor":{"id":"documentation-core/editor","title":"Editor","description":"The editor for the SteeringSystemAsset let\'s you set up a system which controls entities. The system is set up modularly from behaviors. To open the editor, double click on any SteeringSystemAsset.","sidebar":"tutorialSidebar"},"documentation-core/merger":{"id":"documentation-core/merger","title":"Merger","description":"Merger is an implementation of IMergeJobWrapper. It is the last step that the BaseSteeringSystem does. Its resposibility is to for each entity, take all its results from all the system\'s behaviors and turn it into one final result for one of the movement systems. By default, this is:","sidebar":"tutorialSidebar"},"documentation-core/queries/entity-queries":{"id":"documentation-core/queries/entity-queries","title":"Entity Queries","description":"Entity queries are crucial part of the ECS package. They find all entities matching some set of components. The base system runs an entity query which matches all entities with the same Main Tag. Information about these entities is then packaged as BaseBehaviorParams and passed around to all behaviors by the BaseSteeringSystem.","sidebar":"tutorialSidebar"},"documentation-core/queries/neighbor_queries/neighbor-params":{"id":"documentation-core/queries/neighbor_queries/neighbor-params","title":"NeighborQueryParams","description":"NeighborQueryParams is passed into all implementations of INeighborQueryJobWrapper. It has NeighborhoodSettings containing properties like MaxNumNeighbors set up in the editor. There are also BaseBehaviorParams for the main entities (based on Main Tag), and BaseBehaviorParams for the potential neighbors (based on the tags specified in the neighbor query).","sidebar":"tutorialSidebar"},"documentation-core/queries/neighbor_queries/neighbor-queries":{"id":"documentation-core/queries/neighbor_queries/neighbor-queries","title":"INeighborQueryJobWrapper","description":"Neighbor queries are implementations of INeighborQueryJobWrapper. Given two sets of entities, they find MaxNumNeighbors neighbors for each entity from the first set. Normally this is MaxNumNeighbors nearest entities restricted by field of view FOV, but generally other criteria of a neighborhood could be implemented. The resulting neighborhood is passed into neighbor behaviors.","sidebar":"tutorialSidebar"},"documentation-core/queries/neighbor_queries/overview":{"id":"documentation-core/queries/neighbor_queries/overview","title":"Overview","description":"Neighbor queries find k neighbors of each entity. The image below shows a SteeringSystemAsset with one group of neighbor behaviors. The selected neighbor query here is KDTreeKNNJobWrapper. It finds at most MaxNumNeighbors of neighbors which are less than MaxNeighborDistance units away. MaxFOV can be used to specify the field of view of each entity. In this case, the query only considers entities with 6_SampleBehaviorsTagComponent, here it\'s the same tag as the Main Tag, but generally they can be different. It is also possible to add more tags. In that case a potential neighbor must have at least one of these tags.","sidebar":"tutorialSidebar"},"documentation-core/queries/ray_queries/overview":{"id":"documentation-core/queries/ray_queries/overview","title":"Overview","description":"Ray queries cast NumRays rays to intersect the scene per each entity. The image below shows a SteeringSystemAsset with one group of ray behaviors. The selected ray query here is Sweep2DCreateRaysJobWrapper. It casts NumRays rays, to max distance of MaxDistance. The Sweep2DCreateRaysJobWrapper casts the rays in section of a circle with a given field of view FOV. The rays will only hit objects matching the selected LayerMask.","sidebar":"tutorialSidebar"},"documentation-core/queries/ray_queries/ray-queries":{"id":"documentation-core/queries/ray_queries/ray-queries","title":"ICreateRaysJobWrapper","description":"Implementations of ICreateRaysJobWrapper create NumRays RayCommands per each entity. The rays are then cast by the BaseSteeringSystem in the background. The results of these raycasts are then passed into ray behaviors.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/Accumulators":{"id":"documentation-defaults/behaviors/Accumulators","title":"Accumulators","description":"The library includes three accumulators which are commonly useful. Accumulators are implementations of IAccumulator. They aggregate information about neighbors or raycasts inside implementations of neighbor behaviors and raycast behaviors.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/intro":{"id":"documentation-defaults/behaviors/intro","title":"Intro","description":"There are several implementations of behaviors included in the Defaults library. They can be added to a SteeringSystemAsset in the editor. Each behavior must have some things to work. For example, here are all the types relevant for one of the provided simple behaviors, the Wandering behavior:","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/neighbor-behaviors/alignment":{"id":"documentation-defaults/behaviors/neighbor-behaviors/alignment","title":"Alignment","description":"Makes entities align their velocity with their neighbors\' velocities.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/neighbor-behaviors/cohesion":{"id":"documentation-defaults/behaviors/neighbor-behaviors/cohesion","title":"Cohesion","description":"Makes entities go towards their neighbors.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/neighbor-behaviors/debug-neigbhors":{"id":"documentation-defaults/behaviors/neighbor-behaviors/debug-neigbhors","title":"Debug Neighbors","description":"Draws a line from each entity to all of it\'s neighbors and a circle showing the maximum distance where a neighbor can be detected. Can be used to debug neighbor queries.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/neighbor-behaviors/flee":{"id":"documentation-defaults/behaviors/neighbor-behaviors/flee","title":"Flee","description":"Makes entities speed up and flee from their neighbors.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/neighbor-behaviors/multi-homing":{"id":"documentation-defaults/behaviors/neighbor-behaviors/multi-homing","title":"MultiHoming","description":"Makes entities go towards the smallest of home areas they are currently in.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/neighbor-behaviors/overview":{"id":"documentation-defaults/behaviors/neighbor-behaviors/overview","title":"Overview","description":"Each neighbor behavior is implemented using the following types:","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/neighbor-behaviors/seeking":{"id":"documentation-defaults/behaviors/neighbor-behaviors/seeking","title":"Seeking","description":"Makes entities speed up towards their closest neighbor.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/neighbor-behaviors/separation":{"id":"documentation-defaults/behaviors/neighbor-behaviors/separation","title":"Separation","description":"Makes entities keep distance from their neighbors.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/ray-behaviors/avoid-ground":{"id":"documentation-defaults/behaviors/ray-behaviors/avoid-ground","title":"Avoid Ground","description":"Makes the entities avoid ground.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/ray-behaviors/avoid-vertical-walls":{"id":"documentation-defaults/behaviors/ray-behaviors/avoid-vertical-walls","title":"Avoid Vertical Walls","description":"Makes the entities avoid geometry which is at some minimum angle with the xz plane. It also does not affect the entity\'s direction up and down.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/ray-behaviors/debug-rays":{"id":"documentation-defaults/behaviors/ray-behaviors/debug-rays","title":"Debug Rays","description":"Draw an arrow for each cast ray, green for rays that miss, red for rays that hit. Can be used to debug ray queries.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/ray-behaviors/envrionment-avoidance":{"id":"documentation-defaults/behaviors/ray-behaviors/envrionment-avoidance","title":"Environment Avoidance","description":"Makes the entities avoid all collisions with the environment.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/ray-behaviors/overview":{"id":"documentation-defaults/behaviors/ray-behaviors/overview","title":"Overview","description":"Each simple behavior is implemented using the following types:","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/simple-behaviors/align-up":{"id":"documentation-defaults/behaviors/simple-behaviors/align-up","title":"Align Up","description":"This behavior tries to prevent entites from flying up or down at too steep angles which may look unnatural.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/simple-behaviors/debug-simple":{"id":"documentation-defaults/behaviors/simple-behaviors/debug-simple","title":"Debug Simple","description":"Draws all the entities passed to it as circles. Can be useful for debugging.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/simple-behaviors/follow-path":{"id":"documentation-defaults/behaviors/simple-behaviors/follow-path","title":"Follow Path","description":"Makes the entity follow a given path.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/simple-behaviors/go-foward":{"id":"documentation-defaults/behaviors/simple-behaviors/go-foward","title":"Go Forward","description":"Makes the entity go in the direction of it\'s forward direction.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/simple-behaviors/homing":{"id":"documentation-defaults/behaviors/simple-behaviors/homing","title":"Homing","description":"Makes the entities go back towards a predefined home position if they get too far from it. It is very useful to constraint entities to some area.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/simple-behaviors/KeepHeight":{"id":"documentation-defaults/behaviors/simple-behaviors/KeepHeight","title":"Keep Height","description":"Makes the entities stay within a specified range of y coordinates. It can be for example useful to restrict how high the entities will fly.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/simple-behaviors/overview":{"id":"documentation-defaults/behaviors/simple-behaviors/overview","title":"Overview","description":"Each simple behavior is implemented using the following types:","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/simple-behaviors/wandering":{"id":"documentation-defaults/behaviors/simple-behaviors/wandering","title":"Wandering","description":"Makes the entity wander around the world smoothly changing the desired direction and speed.","sidebar":"tutorialSidebar"},"documentation-defaults/behaviors/VelocityResult":{"id":"documentation-defaults/behaviors/VelocityResult","title":"VelocityResult(s)","description":"All behaviors in the defaults library return a plain struct VelocityResult per entity. The results for each entity in a behavior are contained by VelocityResults, a wrapper object for NativeArray. The VelocityResults structure is \'compatible\' with CombineVelocitiesJobWrapper, a merger which receives an array of VelocityResults, one for each behavior.","sidebar":"tutorialSidebar"},"documentation-defaults/Merger":{"id":"documentation-defaults/Merger","title":"Merge Velocities","description":"The library contains one implementation of a merger - CombineVelocitiesJobWrapper. It turns all the VelocityResult from behaviors into one DesiredVelocityComponent which the movement systems use to update the entities\' VelocityComponent. The merger requires that a DesiredVelocityComponent is present on the entity. Behaviors which can be used with it must return VelocityResult (all behaviors in the defaults library do).","sidebar":"tutorialSidebar"},"documentation-defaults/movement/0_2D-movement":{"id":"documentation-defaults/movement/0_2D-movement","title":"Movement 2D","description":"This movement system is suitable for movemement in 2D. The logic is implemented inside Move2DSystem, which works with Movement2DComponent. The following properties can be set on the Movement2DComponent:","sidebar":"tutorialSidebar"},"documentation-defaults/movement/1_3D-movement":{"id":"documentation-defaults/movement/1_3D-movement","title":"Movement 3D","description":"This movement system is suitable for flying or swimming movemement in 3D. It\'s almost identical to 2D movement but works in 3D. Also, the entities bank to turns. The logic is implemented inside Move3DSystem, which works with Movement3DComponent.","sidebar":"tutorialSidebar"},"documentation-defaults/movement/2_25D-movement":{"id":"documentation-defaults/movement/2_25D-movement","title":"Movement 2.5D","description":"The Move25DSystem is suitable for movement on a 3D surface, for example a terrain. It is our replacement for Unity\'s CharacterController which works with ECS. The Move25DSystem is only usable with CollideAndSlideSystem, and so KinematicBodyAuthoring must be added any entity which wants to use it.","sidebar":"tutorialSidebar"},"documentation-defaults/movement/collision-resolution":{"id":"documentation-defaults/movement/collision-resolution","title":"Collision Resolution","description":"Normally in Unity CharacterController handles both movement and collision resolution. Here the collision resolution is split into a separate system - CollideAndSlideSystem which implements a collide and slide algorithm. This allows the collision resolution to be used with any movement system. For now the algorithm only supports a sphere shape to detect collisions. The system takes the entities\' RadiusComponent as the sphere\'s radius. Collisions are detected against any Unity Collider in the scene. A collider does not need to be present on the entities themselves.","sidebar":"tutorialSidebar"},"documentation-defaults/movement/overview":{"id":"documentation-defaults/movement/overview","title":"Overview","description":"Movement systems take the entity\'s current velocity VelocityComponent and its desired velocity DesiredVelocityComponent and update its VelocityComponent. Each movement system has a component where properties like acceleration can be adjusted.","sidebar":"tutorialSidebar"},"documentation-defaults/queries/neighbor-queries/kd-tree-knn":{"id":"documentation-defaults/queries/neighbor-queries/kd-tree-knn","title":"KD Tree KNN","description":"For each entity finds maximum of MaxNumNeighbors within radius MaxNeighborDistance. It\'s also possible to limit the field of view with MaxFOV. Functionally it is exactly the same as SpacialHashKNNJobWrapper. The only difference is in the data structure used. Usually, SpacialHashKNNJobWrapper provides better performance, but proper profiling is always necessary.","sidebar":"tutorialSidebar"},"documentation-defaults/queries/neighbor-queries/spacial-hash-knn":{"id":"documentation-defaults/queries/neighbor-queries/spacial-hash-knn","title":"Spacial Hash KNN","description":"For each entity finds maximum of MaxNumNeighbors within radius MaxNeighborDistance. It\'s also possible to limit the field of view with MaxFOV. Functionally it is exactly the same as KDTreeKNNJobWrapper. The only difference is in the data structure used. Usually, spacial hashing provides better performance, but proper profiling is always necessary.","sidebar":"tutorialSidebar"},"documentation-defaults/queries/ray-queries/cone-create-rays":{"id":"documentation-defaults/queries/ray-queries/cone-create-rays","title":"Cone Create Rays","description":"Creates rays from entity\'s position in directions along section of a sphere given by FOV degrees. It is possible to adjust offset of the ray\'s origin with Offset. By default the rays are oriented around the entity\'s forward direction, that can be adjusted with Rotation.","sidebar":"tutorialSidebar"},"documentation-defaults/queries/ray-queries/down-single-create-rays":{"id":"documentation-defaults/queries/ray-queries/down-single-create-rays","title":"Down Single Create Rays","description":"Creates rays from entity\'s position in direction down - float3(0, -1, 0). Should be used with NumRays = 1.","sidebar":"tutorialSidebar"},"documentation-defaults/queries/ray-queries/sweep-2D-create-rays":{"id":"documentation-defaults/queries/ray-queries/sweep-2D-create-rays","title":"Sweep 2D Query Create Rays","description":"Creates rays from entity\'s position in directions along section of a circle given by FOV degrees. It is possible to adjust offset of the ray\'s origin with Offset. By default the rays are oriented around the entity\'s forward direction, that can be adjusted with Rotation.","sidebar":"tutorialSidebar"},"documentation-defaults/utilities/box-limiter":{"id":"documentation-defaults/utilities/box-limiter","title":"Box Limiter","description":"The BoxLimiterSystem wraps the position of entities to the other side of a box area. The system will do this for all entities with a BoxLimiterComponent. The size of the box can be set on the component in it\'s Size property. This system was used in the 2D flocking sample.","sidebar":"tutorialSidebar"},"documentation-defaults/utilities/path":{"id":"documentation-defaults/utilities/path","title":"Paths","description":"Paths are used by the FollowPathJob behavior. For this behavior to work, an instance of IPathPoints has to be assigned into the entity\'s FollowPathAuthoring.","sidebar":"tutorialSidebar"},"documentation-defaults/utilities/spawner":{"id":"documentation-defaults/utilities/spawner","title":"Spawner","description":"SpawnerAuthoring can be attached to a game object to spawn entities in random positions of some area. The system which does this is the SpawnerSystem. It spawns the entities in a radius around the game object with SpawnerAuthoring.","sidebar":"tutorialSidebar"},"documentation-defaults/utilities/unmanaged-animation-curve":{"id":"documentation-defaults/utilities/unmanaged-animation-curve","title":"Unmanaged Animation Curve","description":"Unity provides animation curves with the AnimationCurve class. Unfortunately as of now this is a class and so cannot be used inside burst compiled jobs. AnimationCurveUnmanaged can be used to bypass this restriction. The following snippet shows using AnimationCurveUnmanaged inside a implementation of a simple behavior.","sidebar":"tutorialSidebar"},"getting-started/concepts":{"id":"getting-started/concepts","title":"Concepts","description":"This page will give you a basic introduction into most important concepts and terms.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"Steering AI is split into four main folders, shown when importing in the image below.","sidebar":"tutorialSidebar"},"getting-started/minimal-set-up":{"id":"getting-started/minimal-set-up","title":"Minimal Setup","description":"To set up a new system, you need two things.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"Steering AI is a framework created for simple AI entities driven by steering behaviors. It is especially suitable for flocking simulations or other group AI behaviors. The framework heavily utilizes multithreading through Unity\'s Jobs, Burst Compiler and ECS to achieve good preformance.","sidebar":"tutorialSidebar"},"samples/2_2d-movement":{"id":"samples/2_2d-movement","title":"2. 2D Movement","description":"Your browser does not support the video tag.","sidebar":"tutorialSidebar"},"samples/3_3d-movement":{"id":"samples/3_3d-movement","title":"3. 3D Movement","description":"Your browser does not support the video tag.","sidebar":"tutorialSidebar"},"samples/5_2.5d-movement":{"id":"samples/5_2.5d-movement","title":"5. 2.5D Movement","description":"Your browser does not support the video tag.","sidebar":"tutorialSidebar"},"samples/collision-avoidance":{"id":"samples/collision-avoidance","title":"7. Collision Avoidance","description":"Your browser does not support the video tag.","sidebar":"tutorialSidebar"},"samples/collisions":{"id":"samples/collisions","title":"4. Collisions","description":"Your browser does not support the video tag.","sidebar":"tutorialSidebar"},"samples/flocking":{"id":"samples/flocking","title":"6. Flocking","description":"Your browser does not support the video tag.","sidebar":"tutorialSidebar"},"samples/flocking-with-predator":{"id":"samples/flocking-with-predator","title":"8. Flocking with Predator","description":"Your browser does not support the video tag.","sidebar":"tutorialSidebar"},"samples/full-example-scene":{"id":"samples/full-example-scene","title":"9. Full Example","description":"Your browser does not support the video tag.","sidebar":"tutorialSidebar"},"samples/minimal-set-up":{"id":"samples/minimal-set-up","title":"1. Minimal Setup","description":"Your browser does not support the video tag.","sidebar":"tutorialSidebar"}}}}')}}]);