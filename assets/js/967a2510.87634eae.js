"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[958],{6387:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>t,metadata:()=>h,toc:()=>d});var s=o(4848),n=o(8453),r=o(6025);const t={sidebar_position:0},a="Overview",h={id:"documentation-core/queries/neighbor_queries/overview",title:"Overview",description:"Neighbor queries find k neighbors of each entity. The image below shows a SteeringSystemAsset with one group of neighbor behaviors. The selected neighbor query here is KDTreeKNNJobWrapper. It finds at most MaxNumNeighbors of neighbors which are less than MaxNeighborDistance units away. MaxFOV can be used to specify the field of view of each entity. In this case, the query only considers entities with 6_SampleBehaviorsTagComponent, here it's the same tag as the Main Tag, but generally they can be different. It is also possible to add more tags. In that case a potential neighbor must have at least one of these tags.",source:"@site/docs/4_documentation-core/5_queries/0_neighbor_queries/0_overview.mdx",sourceDirName:"4_documentation-core/5_queries/0_neighbor_queries",slug:"/documentation-core/queries/neighbor_queries/overview",permalink:"/Steering-AI-Documentation/docs/documentation-core/queries/neighbor_queries/overview",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Neighbor Queries",permalink:"/Steering-AI-Documentation/docs/category/neighbor-queries"},next:{title:"INeighborQueryJobWrapper",permalink:"/Steering-AI-Documentation/docs/documentation-core/queries/neighbor_queries/neighbor-queries"}},c={},d=[];function u(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",p:"p",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"overview",children:"Overview"})}),"\n",(0,s.jsxs)(i.p,{children:["Neighbor queries find ",(0,s.jsx)(i.em,{children:"k"})," neighbors of each entity. The image below shows a ",(0,s.jsx)(i.a,{href:"/docs/documentation-core/base-system/SteeringSystemAsset",children:(0,s.jsx)(i.code,{children:"SteeringSystemAsset"})})," with one group of ",(0,s.jsx)(i.a,{href:"/docs/documentation-core/behaviors/neighbor-behaviors/intro",children:(0,s.jsx)(i.em,{children:"neighbor behaviors"})}),". The selected ",(0,s.jsx)(i.a,{href:"/docs/documentation-core/queries/neighbor_queries/neighbor-queries",children:"neighbor query"})," here is ",(0,s.jsx)(i.a,{href:"/docs/documentation-defaults/queries/neighbor-queries/kd-tree-knn",children:(0,s.jsx)(i.code,{children:"KDTreeKNNJobWrapper"})}),". It finds at most ",(0,s.jsx)(i.code,{children:"MaxNumNeighbors"})," of neighbors which are less than ",(0,s.jsx)(i.code,{children:"MaxNeighborDistance"})," units away. ",(0,s.jsx)(i.code,{children:"MaxFOV"})," can be used to specify the field of view of each entity. In this case, the query only considers entities with ",(0,s.jsx)(i.code,{children:"_6_SampleBehaviorsTagComponent"}),", here it's the same ",(0,s.jsx)(i.a,{href:"/docs/documentation-core/components/Tags",children:"tag"})," as the ",(0,s.jsx)(i.em,{children:"Main Tag"}),", but generally they can be different. It is also possible to add more tags. In that case a potential neighbor must have at least one of these tags."]}),"\n",(0,s.jsx)("img",{src:(0,r.Ay)("/img/samples/flocking/Asset.png"),alt:"Description of the image"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsxs)(i.em,{children:["Image of a ",(0,s.jsx)(i.a,{href:"/docs/documentation-core/base-system/SteeringSystemAsset",children:(0,s.jsx)(i.code,{children:"SteeringSystemAsset"})})," from the ",(0,s.jsx)(i.a,{href:"/docs/samples/flocking",children:"flocking sample"}),". ",(0,s.jsx)(i.a,{href:"/docs/documentation-defaults/queries/neighbor-queries/kd-tree-knn",children:(0,s.jsx)(i.code,{children:"KDTreeKNNJobWrapper"})})," is selected as implementation of ",(0,s.jsx)(i.a,{href:"/docs/documentation-core/queries/neighbor_queries/neighbor-queries",children:"neighbor query"})," which will search among entities tagged with ",(0,s.jsx)(i.code,{children:"_6_SampleBehaviorsTagComponent"}),"."]})}),"\n",(0,s.jsxs)("video",{controls:!0,width:"800",children:[(0,s.jsx)("source",{src:(0,r.Ay)("/videos/DebugJob.mp4"),type:"video/mp4"}),(0,s.jsx)(i.p,{children:"Your browser does not support the video tag."})]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:"Video showing a neighbor query visualized. The connections show neighbor relationships. The radii show the maximum distance to consider a neighbor."})}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"/docs/documentation-defaults/behaviors/neighbor-behaviors/debug-neigbhors",children:(0,s.jsx)(i.code,{children:"DebugNeighborsJobWrapper"})})," can help to visualize a neighbor query, as in the video."]})})]})}function l(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,i,o)=>{o.d(i,{R:()=>t,x:()=>a});var s=o(6540);const n={},r=s.createContext(n);function t(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);