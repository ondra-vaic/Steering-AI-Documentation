"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6057],{5849:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var o=i(4848),n=i(8453),s=i(6025);const r={sidebar_position:5},c="Merge Velocities",d={id:"documentation-defaults/Merger",title:"Merge Velocities",description:"The library contains one implementation of a merger - CombineVelocitiesJobWrapper. It turns all the VelocityResult from behaviors into one DesiredVelocityComponent which the movement systems use to update the entities' VelocityComponent. The merger requires that a DesiredVelocityComponent is present on the entity. Behaviors which can be used with it must return VelocityResult (all behaviors in the defaults library do).",source:"@site/docs/5_documentation-defaults/5_Merger.mdx",sourceDirName:"5_documentation-defaults",slug:"/documentation-defaults/Merger",permalink:"/docs/documentation-defaults/Merger",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Unmanaged Animation Curve",permalink:"/docs/documentation-defaults/utilities/unmanaged-animation-curve"}},l={},a=[{value:"CombineVelocitiesJob",id:"combinevelocitiesjob",level:2},{value:"DesiredVelocityComponent",id:"desiredvelocitycomponent",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"merge-velocities",children:"Merge Velocities"})}),"\n",(0,o.jsxs)(t.p,{children:["The library contains one implementation of a ",(0,o.jsx)(t.a,{href:"/docs/documentation-core/merger",children:"merger"})," - ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/Merger",children:(0,o.jsx)(t.code,{children:"CombineVelocitiesJobWrapper"})}),". It turns all the ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/behaviors/VelocityResult",children:(0,o.jsx)(t.code,{children:"VelocityResult"})})," from behaviors into one ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/Merger#desiredvelocitycomponent",children:(0,o.jsx)(t.code,{children:"DesiredVelocityComponent"})})," which the movement systems use to update the entities' ",(0,o.jsx)(t.a,{href:"/docs/documentation-core/base-system/steering-entity",children:(0,o.jsx)(t.code,{children:"VelocityComponent"})}),". The merger requires that a ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/Merger#desiredvelocitycomponent",children:(0,o.jsx)(t.code,{children:"DesiredVelocityComponent"})})," is present on the entity. ",(0,o.jsx)(t.a,{href:"/docs/category/behaviors",children:"Behaviors"})," which can be used with it must return ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/behaviors/VelocityResult",children:(0,o.jsx)(t.code,{children:"VelocityResult"})})," (all behaviors in the defaults library do)."]}),"\n",(0,o.jsx)(t.h2,{id:"combinevelocitiesjob",children:"CombineVelocitiesJob"}),"\n",(0,o.jsxs)(t.p,{children:["For each entity, the merger sorts it's ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/behaviors/VelocityResult",children:(0,o.jsx)(t.code,{children:"VelocityResult"})}),"s by ",(0,o.jsx)(t.code,{children:"Priority"})," first. Starting with the highest priority, it starts accumulating a weighted sum of ",(0,o.jsx)(t.code,{children:"VelocityResult.Direction * VelocityResult.DirectionDesire"}),", until there are results or sum of ",(0,o.jsx)(t.code,{children:"VelocityResult.DirectionDesire"})," is at least one. This way results from low priority behaviors can get completely filtered out. The direction of the weighted sum is then the desired direction in ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/Merger#desiredvelocitycomponent",children:(0,o.jsx)(t.code,{children:"DesiredVelocityComponent"})}),". In the same way, a weighted sum of all ",(0,o.jsx)(t.code,{children:"VelocityResult.Speed * VelocityResult.SpeedDesire"})," is calculated. It determines the desired speed in ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/Merger#desiredvelocitycomponent",children:(0,o.jsx)(t.code,{children:"DesiredVelocityComponent"})}),"."]}),"\n",(0,o.jsxs)("div",{style:{display:"flex",alignItems:"flex-end",justifyContent:"flex-start"},children:[(0,o.jsxs)("video",{controls:!0,height:"320",children:[(0,o.jsx)("source",{src:(0,s.Ay)("/videos/Combiner.mp4"),type:"video/mp4"}),(0,o.jsx)(t.p,{children:"Your browser does not support the video tag."})]}),(0,o.jsx)("div",{style:{width:"15px"}}),(0,o.jsx)("img",{src:(0,s.Ay)("/img/Combiner.png"),alt:"Description of the image",height:"305"})]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsxs)(t.em,{children:["Video and an image showing ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/Merger",children:(0,o.jsx)(t.code,{children:"CombineVelocitiesJobWrapper"})})," combining influences of three behaviors, green - ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/behaviors/neighbor-behaviors/cohesion",children:(0,o.jsx)(t.code,{children:"CohesionJobWrapper"})}),", red - ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/behaviors/neighbor-behaviors/separation",children:(0,o.jsx)(t.code,{children:"SeparationJobWrapper"})})," and yellow ",(0,o.jsx)(t.a,{href:"/docs/documentation-defaults/behaviors/simple-behaviors/wandering",children:(0,o.jsx)(t.code,{children:"WanderingJobWrapper"})}),". the final desired direction is shown in white."]})}),"\n",(0,o.jsx)(t.h2,{id:"desiredvelocitycomponent",children:"DesiredVelocityComponent"}),"\n",(0,o.jsxs)(t.p,{children:["Holds the desired velocity of the entity. ",(0,o.jsx)(t.a,{href:"/docs/category/movement",children:"Movement systems"})," then look at this as the direction and speed which the entity wants to have, and then modify its ",(0,o.jsx)(t.a,{href:"/docs/documentation-core/base-system/steering-entity",children:(0,o.jsx)(t.code,{children:"VelocityComponent"})})," accordingly."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:'title="DesiredVelocityAuthoring.cs"',children:"public struct DesiredVelocityComponent : IComponentData\r\n{\r\n    public float3 Value; // Desired velocity - direction and speed\r\n    public bool Debug; // Toggle to debug\r\n    public float DebugScale; // Scale for debugging\r\n    public Color Color; // Color to draw Value with\r\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>c});var o=i(6540);const n={},s=o.createContext(n);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);