DOCS

2D Movement -> Movement 2D
desriptions for all movement systems 
in concepts, MergeVelocityResultsJobWrapper -> CombineVelocitiesJobWrapper
bold letters and links in concepts?
link ecs in concepts
describe VelocityResultS in /docs/documentation-defaults/behaviors/VelocityResult
collision resolution - more description and fill in stuff for authoring
Movement25DAuthoring and KinematicBodyAuthoring sections
KeepSpeedJobWrapper - at least still in samples flocking - get rid of it
FlockingEntityAuthoring to Steering in /docs/documentation-core/components/Tags
Base System -> BaseSteeringSystem
DebugaNeighborsComponent in /docs/documentation-core/behaviors/neighbor-behaviors/
Flocking samples links to behaviors

DOCS.last

check everywhere that components and behaviors arent just copied from somewhere
fix nothing after headline
check runner/wrapper
no name on code samples - no highlighting
Your browser does not support the video tag.
cleanup
visual
links

DOCS.FUTURE
add CreateRaysParams etc into core just like NeighborQueryParams
describe time scaler - utilities
describe IBehaviorResults and VelocityResults
describe somewhere you can put shared properties into job wrappers
... image for each behavior
Movement25d - all screenshots have mouse pointer
sub headlines for all categories

OTHER
reexport diagram image with good wording
go through all scenes and check prefabs, apply / rever overrides, check everything works

EDITOR.FUTURE
handle somehow changing name, now there is some bug it seems
rename tag - warning in the window 
steering system window doesn't refresh when tag removed on entity

CODE

rename DebugableComponent

CODE.FUTURE
neighbor queries todos
path performance probably sucks
IBaseBehaviorData + INeighborBehavior data
no need to split into RayData and Commands, keep in other struct

OTHER.FUTURE
use the wandering desire thing?
Rotations for 3D might work with sterp, seems to work with 2.5D. Next time use forward as twist axis!!
check what is the performance difference if I use bssr = temp.MaxHeap.HeadValue;

BACKLOG
accelerate more based on sum desire * f(prio)?

NOTES
high direction on keep speed and homing helps with nice cohesive flocks

unity sphere and box corner collision detection bug
https://www.youtube.com/watch?v=cYVmcaRAbJg intrinsic mean